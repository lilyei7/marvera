# Configuración Nginx para MarVera.mx
# Archivo: /etc/nginx/sites-available/marvera.mx

server {
    listen 80;
    server_name marvera.mx www.marvera.mx;
    
    # Redirigir HTTP a HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name marvera.mx www.marvera.mx;
    
    # Certificados SSL (Let's Encrypt recomendado)
    ssl_certificate /etc/ssl/certs/marvera.mx.crt;
    ssl_certificate_key /etc/ssl/private/marvera.mx.key;
    
    # Configuración SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Carpeta raíz donde están los archivos del frontend
    root /var/www/marvera.mx/dist;
    index index.html;
    
    # Headers de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Configuración para archivos estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # API Routes - Proxy al backend Node.js
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS Headers para API
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        
        # Manejar OPTIONS requests para CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # React Router - Todas las rutas van a index.html
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Archivos especiales
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
    
    # Logs
    access_log /var/log/nginx/marvera.mx.access.log;
    error_log /var/log/nginx/marvera.mx.error.log;
}

# Configuración para subdominio admin (opcional)
server {
    listen 443 ssl http2;
    server_name admin.marvera.mx;
    
    # Mismos certificados SSL
    ssl_certificate /etc/ssl/certs/marvera.mx.crt;
    ssl_certificate_key /etc/ssl/private/marvera.mx.key;
    
    # Redirigir a /admin en el sitio principal
    return 301 https://marvera.mx/admin$request_uri;
}
