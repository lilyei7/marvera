#!/bin/bash

# Script de diagn√≥stico para MarVera
echo "üîç Diagn√≥stico completo de MarVera..."
echo "======================================"

# Variables
SERVER_IP="187.33.155.127"
FRONTEND_PORT="5173"
BACKEND_PORT="3001"

# Funci√≥n para verificar puertos
check_ports() {
    echo ""
    echo "üìä Estado de puertos:"
    echo "--------------------"
    
    echo "üîç Puerto 80 (Nginx):"
    sudo ss -tuln | grep ":80 " || echo "‚ùå Nginx no est√° escuchando en puerto 80"
    
    echo "üîç Puerto $BACKEND_PORT (Backend):"
    sudo ss -tuln | grep ":$BACKEND_PORT " || echo "‚ùå Backend no est√° escuchando en puerto $BACKEND_PORT"
    
    echo "üîç Puerto $FRONTEND_PORT (Frontend):"
    sudo ss -tuln | grep ":$FRONTEND_PORT " || echo "‚ùå Frontend no est√° escuchando en puerto $FRONTEND_PORT"
}

# Funci√≥n para verificar servicios
check_services() {
    echo ""
    echo "‚öôÔ∏è Estado de servicios:"
    echo "----------------------"
    
    echo "üîç Nginx:"
    sudo systemctl is-active nginx && echo "‚úÖ Nginx activo" || echo "‚ùå Nginx inactivo"
    
    echo "üîç Backend MarVera:"
    sudo systemctl is-active marvera-backend 2>/dev/null && echo "‚úÖ Backend activo" || echo "‚ùå Backend inactivo"
    
    echo "üîç Frontend MarVera:"
    sudo systemctl is-active marvera-frontend 2>/dev/null && echo "‚úÖ Frontend activo" || echo "‚ùå Frontend inactivo"
}

# Funci√≥n para verificar logs
check_logs() {
    echo ""
    echo "üìã √öltimos logs (√∫ltimas 10 l√≠neas):"
    echo "------------------------------------"
    
    echo "üîç Logs de Nginx:"
    sudo tail -n 5 /var/log/nginx/error.log 2>/dev/null || echo "‚ùå No se pueden leer logs de Nginx"
    
    echo ""
    echo "üîç Logs de Backend:"
    sudo journalctl -u marvera-backend -n 5 --no-pager 2>/dev/null || echo "‚ùå No se pueden leer logs de Backend"
    
    echo ""
    echo "üîç Logs de Frontend:"
    sudo journalctl -u marvera-frontend -n 5 --no-pager 2>/dev/null || echo "‚ùå No se pueden leer logs de Frontend"
}

# Funci√≥n para verificar configuraci√≥n
check_config() {
    echo ""
    echo "‚öôÔ∏è Verificaci√≥n de configuraci√≥n:"
    echo "---------------------------------"
    
    echo "üîç Configuraci√≥n de Nginx:"
    sudo nginx -t && echo "‚úÖ Configuraci√≥n de Nginx v√°lida" || echo "‚ùå Error en configuraci√≥n de Nginx"
    
    echo "üîç Variables de entorno:"
    [ -f .env ] && echo "‚úÖ Archivo .env existe" || echo "‚ùå Archivo .env no encontrado"
    
    if [ -f .env ]; then
        echo "üìã Contenido de .env:"
        cat .env
    fi
}

# Funci√≥n para verificar conectividad
check_connectivity() {
    echo ""
    echo "üåê Verificaci√≥n de conectividad:"
    echo "-------------------------------"
    
    echo "üîç Nginx responde:"
    curl -s -o /dev/null -w "%{http_code}" http://localhost/ && echo " ‚úÖ Nginx accesible localmente" || echo " ‚ùå Nginx no responde"
    
    echo "üîç Backend responde:"
    curl -s -o /dev/null -w "%{http_code}" http://localhost:$BACKEND_PORT/api/health && echo " ‚úÖ Backend accesible" || echo " ‚ùå Backend no responde"
    
    echo "üîç Frontend responde:"
    curl -s -o /dev/null -w "%{http_code}" http://localhost:$FRONTEND_PORT/ && echo " ‚úÖ Frontend accesible" || echo " ‚ùå Frontend no responde"
}

# Funci√≥n para mostrar procesos
check_processes() {
    echo ""
    echo "üîÑ Procesos relacionados:"
    echo "------------------------"
    
    echo "üîç Procesos de Node.js:"
    ps aux | grep node | grep -v grep || echo "‚ùå No hay procesos de Node.js"
    
    echo ""
    echo "üîç Procesos de Nginx:"
    ps aux | grep nginx | grep -v grep || echo "‚ùå No hay procesos de Nginx"
}

# Funci√≥n principal
main() {
    check_services
    check_ports
    check_config
    check_connectivity
    check_processes
    check_logs
    
    echo ""
    echo "üéØ Recomendaciones basadas en el diagn√≥stico:"
    echo "============================================"
    
    # Verificar si hay problemas comunes
    if ! sudo systemctl is-active nginx >/dev/null 2>&1; then
        echo "‚ùå Nginx no est√° activo - ejecutar: sudo systemctl start nginx"
    fi
    
    if ! sudo systemctl is-active marvera-backend >/dev/null 2>&1; then
        echo "‚ùå Backend no est√° activo - ejecutar: sudo systemctl start marvera-backend"
    fi
    
    if ! sudo systemctl is-active marvera-frontend >/dev/null 2>&1; then
        echo "‚ùå Frontend no est√° activo - ejecutar: sudo systemctl start marvera-frontend"
    fi
    
    if ! sudo ss -tuln | grep ":$BACKEND_PORT " >/dev/null; then
        echo "‚ùå Backend no escucha en puerto $BACKEND_PORT"
        echo "   Soluci√≥n: cd backend && npm run dev"
    fi
    
    if ! sudo ss -tuln | grep ":$FRONTEND_PORT " >/dev/null; then
        echo "‚ùå Frontend no escucha en puerto $FRONTEND_PORT"
        echo "   Soluci√≥n: npm run dev"
    fi
    
    echo ""
    echo "üöÄ Comandos para reiniciar todo:"
    echo "sudo systemctl restart nginx marvera-backend marvera-frontend"
    echo ""
    echo "üîß Comandos para ejecutar manualmente:"
    echo "Terminal 1: cd backend && npm run dev"
    echo "Terminal 2: npm run dev"
}

# Ejecutar diagn√≥stico
case "$1" in
    "ports")
        check_ports
        ;;
    "services")
        check_services
        ;;
    "logs")
        check_logs
        ;;
    "config")
        check_config
        ;;
    "connectivity")
        check_connectivity
        ;;
    "processes")
        check_processes
        ;;
    *)
        main
        ;;
esac
